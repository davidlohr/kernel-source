From: Geert Uytterhoeven <geert@linux-m68k.org>
Date: Tue, 3 Oct 2017 19:14:38 +0100
Subject: ARM: 8702/1: head-common.S: Clear lr before jumping to start_kernel()
Git-commit: 59b6359dd92d18f5dc04b14a4c926fa08ab66f7c
Patch-mainline: v4.15-rc1
References: git-fixes

If CONFIG_DEBUG_LOCK_ALLOC=y, the kernel log is spammed with a few
hundred identical messages:

    unwind: Unknown symbol address c0800300
    unwind: Index not found c0800300

c0800300 is the return address from the last subroutine call (to
__memzero()) in __mmap_switched().  Apparently having this address in
the link register confuses the unwinder.

To fix this, reset the link register to zero before jumping to
start_kernel().

Fixes: 9520b1a1b5f7a348 ("ARM: head-common.S: speed up startup code")
Suggested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
Acked-by: Nicolas Pitre <nico@linaro.org>
Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
Acked-by: Ivan T. Ivanov <iivanov@suse.de>
---
 arch/arm/kernel/head-common.S |    1 +
 1 file changed, 1 insertion(+)

--- a/arch/arm/kernel/head-common.S
+++ b/arch/arm/kernel/head-common.S
@@ -101,6 +101,7 @@ __mmap_switched:
 	str	r2, [r6]			@ Save atags pointer
 	cmp	r7, #0
 	strne	r0, [r7]			@ Save control register values
+	mov	lr, #0
 	b	start_kernel
 ENDPROC(__mmap_switched)
 
